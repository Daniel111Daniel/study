#!/usr/bin/env python
# coding: utf-8

# # Привет, коллега!
# 
# В течение четырех занятий нас ждет полное погружение, которое включает в себя:
# 1. Получение данных
# 2. Предобработка данных
# 3. Раздовательный анализ данных
# 4. Проверка гипотез
# 5. Формулирование выводов, рекомендаций и плана возможных действий для мнеджмента компании

# #### Данные для задания можно скачать по ссылке: https://drive.google.com/file/d/1pCBXkKTE-Dqf2saOAwCIke08vcG6_voY/view?usp=sharing
# #### Для выполнения задания тебе могут пригодится библиотеки:
# (some **hint** 
# 1. import pandas as pd
# 2. import numpy as np 
# 3. import datetime
# 3. import sklearn )

# Описание колонок в дата-фрейме:
# 
# 1) id - уникальный ID записи
# 2) date_created - дата и время создания заказа
# 3) order_id - уникальный ID заказа
# 4) city_name - город заказа
# 5) date_assembly_started - дата и время начала сборки заказа
# 6) work_place_id - id места работника, который работает с заказом
# 7) date_picked - дата и время окончания отбора позиций заказа
# 8) single_item (булевое значение) - находится ли в заказе 1 товар в количестве 1 штука
# 9) from_multi_stock_wave (булевое значение) - собирается ли заказ с нескольких складов
# 

# In[76]:


orders.to_csv('Step_1_Uzum_Academy.csv')


# Задача №1. Коллега прислал тебе данные для анализа: скачай данные, проверь количество колонок. Если присутствуют лишняя колонка (колонки) - их нужно удалить.

# In[ ]:


# ...some code here ....


# Задача №2. Теперь необходимо проверить кол-во строк и кол-во непустых строк в дата-фрейме. Если в дата-фрейме в какой-либо колонке присутствуют пустые значения - можно удалить целую строку. 

# In[ ]:


# ...some code here ....


# Задача №3. 
# Теперь, когда все готово, приступим к главному:
#     Твой коллега скинул данные для того, чтобы ты, как аналитик, подсчитал, для какого города заказы собираются быстрее. 
#     Таким образом:
#     
# 1) Нужно сравнить date_created и date_assembly_started - сколько времени проходит от создания заказа до начала его сборки в среднем?
# 2) Нужно сравнить - сколько времени проходит от начала сборки до окончания отбора позиций в среднем?
# 3) Затем сравнить 2 полученные выше метрики по городам (для какого города время от создания заказа до начала сборки - минимальное? для какого города - максимальное? как бы ты объяснил - почему?)
# 

# In[68]:


# ... some code here ... 


# Задача №4. Ты подсчитал среднее время сборки заказа по городам и в целом, однако теперь хочется понять являются ли результаты значимыми. 
# 
# 1) Проверь распредение сборки заказов в целом (без разделения по городам) - является ли распределение нормальным?
# 2) Проверь распредение сборки заказов для самого медленного города и для самого быстрого. Являются ли оба эти распределения нормальным?
# 3) Построй графики плотности распределений и box-plots. Что говорят данные? Как бы ты их интерпретировал? 
# 5) Проведи 2 статистических теста для проверки нормальности (на выбор) по два теста - на каждый город. О чем говорят метрики? О чем говорит p.value? 
# 6) Сравни 2 города (самый быстрый и самый медленный), используя параметрический или непараметрический критерий сравнения (в зависимости от пункта 5). 
# 7) Сделай вывод, относительно результата. 
# 
# 

# In[69]:


# ...some code here ...


# Задача №5. Полученные результаты ты показал коллеге. Он поблагодарил тебя за работу, посмотрел результаты, но вдруг ему в голову пришла гипотеза - а что если на время сборки заказа влияет кол-во заказов на складе в этот день? И действительно! Вероятно, что чем больше заказов было создано в конкретный день, тем медленнее их будут собирать. Ты вызвался проверить эту гипотезу.
# 
# Таким образом:
# 
# 1) Сформируй дата-фрейм, где будет: кол-во заказов (можно брать count по order_id), дата (можно взять дату создания заказа) и среднее время сборки заказа в эту дату. 
# 2) Построй корреляцию между кол-вом заказов и среднем временем сборки в этот день
# 3) Построй линейную регрессию для этих же признаков, где зависимая переменная - среднее время сборки заказа. 
# 4) О чем говорят данные? Что говорят метрики корреляции? Что говорят статистики регрессии? Как бы ты поделился результатом с коллегой, который не очень хорош в математике? 

# In[ ]:


# ... some code here ... 

